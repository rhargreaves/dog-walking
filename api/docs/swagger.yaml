basePath: /
definitions:
  common.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  common.APIErrorResponse:
    properties:
      error:
        $ref: '#/definitions/common.APIError'
    type: object
  model.CreateOrUpdateDogRequest:
    properties:
      breed:
        type: string
      dateOfBirth:
        type: string
      energyLevel:
        maximum: 5
        minimum: 1
        type: integer
      isNeutered:
        type: boolean
      name:
        type: string
      sex:
        enum:
        - male
        - female
        type: string
      size:
        enum:
        - small
        - medium
        - large
        type: string
      socialization:
        $ref: '#/definitions/model.Socialization'
      specialInstructions:
        type: string
    type: object
  model.DogListResponse:
    properties:
      dogs:
        items:
          $ref: '#/definitions/model.DogResponse'
        type: array
      nextToken:
        type: string
    type: object
  model.DogResponse:
    properties:
      breed:
        type: string
      dateOfBirth:
        type: string
      energyLevel:
        maximum: 5
        minimum: 1
        type: integer
      id:
        type: string
      isNeutered:
        type: boolean
      name:
        type: string
      photoHash:
        type: string
      photoStatus:
        type: string
      photoUrl:
        type: string
      sex:
        enum:
        - male
        - female
        type: string
      size:
        enum:
        - small
        - medium
        - large
        type: string
      socialization:
        $ref: '#/definitions/model.Socialization'
      specialInstructions:
        type: string
    required:
    - energyLevel
    - sex
    - size
    type: object
  model.Socialization:
    properties:
      goodWithChildren:
        type: boolean
      goodWithLargeDogs:
        type: boolean
      goodWithPuppies:
        type: boolean
      goodWithSmallDogs:
        type: boolean
    type: object
info:
  contact: {}
  description: API for managing dogs, etc
  title: Dog Walking Service API
  version: "1.0"
paths:
  /dogs:
    get:
      description: Get a list of all registered dogs
      parameters:
      - default: 25
        description: Limit the number of dogs returned
        in: query
        maximum: 25
        minimum: 1
        name: limit
        type: integer
      - description: Filter dogs by partial name
        in: query
        name: name
        type: string
      - description: A token to get the next page of results
        in: query
        name: nextToken
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogListResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
      summary: List all dogs
      tags:
      - dogs
    post:
      consumes:
      - application/json
      description: Create a new dog with the provided details
      parameters:
      - description: Dog information
        in: body
        name: dog
        required: true
        schema:
          $ref: '#/definitions/model.CreateOrUpdateDogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
      summary: Create a new dog
      tags:
      - dogs
  /dogs/{id}:
    delete:
      description: Delete a dog by its ID
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Dog not found
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
      summary: Delete a dog
      tags:
      - dogs
    get:
      description: Get details of a specific dog by its ID
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "404":
          description: Dog not found
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
      summary: Get a dog by ID
      tags:
      - dogs
    put:
      consumes:
      - application/json
      description: Update a dog's information by its ID
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated dog information
        in: body
        name: dog
        required: true
        schema:
          $ref: '#/definitions/model.CreateOrUpdateDogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
        "404":
          description: Dog not found
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIErrorResponse'
      summary: Update a dog
      tags:
      - dogs
  /dogs/{id}/photo:
    put:
      consumes:
      - image/jpeg
      description: Upload a JPEG photo for a specific dog
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Invalid content type or request
          schema:
            $ref: '#/definitions/common.APIError'
        "404":
          description: Dog not found
          schema:
            $ref: '#/definitions/common.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/common.APIError'
      summary: Upload a dog's photo
      tags:
      - dogs
      - photos
  /ping:
    get:
      description: Returns OK if the API is running
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check endpoint
      tags:
      - health
schemes:
- https
swagger: "2.0"
