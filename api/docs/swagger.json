{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for managing dogs, etc",
        "title": "Dog Walking Service API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/dogs": {
            "get": {
                "description": "Get a list of all registered dogs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "List all dogs",
                "parameters": [
                    {
                        "maximum": 25,
                        "minimum": 1,
                        "type": "integer",
                        "default": 25,
                        "description": "Limit the number of dogs returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A token to get the next page of results",
                        "name": "nextToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DogListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new dog with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Create a new dog",
                "parameters": [
                    {
                        "description": "Dog information",
                        "name": "dog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DogRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.DogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}": {
            "get": {
                "description": "Get details of a specific dog by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Get a dog by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DogResponse"
                        }
                    },
                    "404": {
                        "description": "Dog not found",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a dog's information by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Update a dog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated dog information",
                        "name": "dog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dog not found",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dog by its ID",
                "tags": [
                    "dogs"
                ],
                "summary": "Delete a dog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Dog not found",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/photo": {
            "put": {
                "description": "Upload a JPEG photo for a specific dog",
                "consumes": [
                    "image/jpeg"
                ],
                "tags": [
                    "dogs",
                    "photos"
                ],
                "summary": "Upload a dog's photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid content type or request",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    },
                    "404": {
                        "description": "Dog not found",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/photo/detect-breed": {
            "post": {
                "description": "Analyzes a previously uploaded photo to detect the dog's breed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs",
                    "photos"
                ],
                "summary": "Detect a dog's breed from its photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns id, breed, and confidence",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "No dog detected or no specific breed detected",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    },
                    "404": {
                        "description": "Dog not found",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.APIError"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns OK if the API is running",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "common.APIErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/common.APIError"
                }
            }
        },
        "model.DogListResponse": {
            "type": "object",
            "properties": {
                "dogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DogResponse"
                    }
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "model.DogRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "breed": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DogResponse": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "photoHash": {
                    "type": "string"
                },
                "photoUrl": {
                    "type": "string"
                }
            }
        }
    }
}