name: Deploy PROD & Test

on:
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

env:
  ENV: prod
  AWS_REGION: eu-west-1
  API_BASE_URL: https://api.dog-walking.roberthargreaves.com
  CLOUDFRONT_BASE_URL: https://images.dog-walking.roberthargreaves.com

jobs:
  deploy-prod:
    name: Deploy PROD
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ./infra
    env:
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      SYSADMIN_USERNAME: ${{ secrets.SYSADMIN_USERNAME }}
      SYSADMIN_PASSWORD: ${{ secrets.SYSADMIN_PASSWORD }}
      CORS_ALLOWED_ORIGIN: ${{ secrets.CORS_ALLOWED_ORIGIN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Create directory for lambda binaries
        run: mkdir -p ../api/build ../photo-moderator/build

      - name: Download compiled API
        uses: dawidd6/action-download-artifact@v3
        with:
          name: api
          path: api/build
          workflow: deploy-uat.yaml
          workflow_conclusion: success

      - name: Download compiled Photo Moderator
        uses: dawidd6/action-download-artifact@v3
        with:
          name: photo-moderator
          path: photo-moderator/build
          workflow: deploy-uat.yaml
          workflow_conclusion: success

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: make init

      - name: Terraform Plan
        run: make plan

      - name: Terraform Apply
        run: make apply

  e2e-test-prod:
    name: E2E Test PROD
    needs: deploy-prod
    runs-on: ubuntu-latest
    environment: prod
    env:
      COGNITO_USER_POOL_NAME: prod-dog-walking
      COGNITO_CLIENT_NAME: prod-dog-walking-api
      TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      CORS_ALLOWED_ORIGIN: ${{ secrets.CORS_ALLOWED_ORIGIN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run e2e tests
        run: make test
